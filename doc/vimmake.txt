vimmake.txt   Utility to simplify usage of make

Author: Alexis Pereda
License: GPLv3

CONTENTS                                                             *vimmake*

1. Introduction  |vimmake-introduction|
2. How it works  |vimmake-howitworks|
3. Usage         |vimmake-usage|
4. Requirements  |vimmake-requirements|
5. Variables     |vimmake-variables|
6. Highlight     |vimmake-highlight|
7. License       |vimmake-license|

==============================================================================
Introduction                                            *vimmake-introduction*

This plugin mainly provides the `:Make` and `:MakeAsync` commands.
It simplifies the usage of make by determining where is the Makefile and which
Makefile is to be utilized whenever multiple are found, depending on the
file open in the current buffer.

==============================================================================
How it works                                              *vimmake-howitworks*

It works with the path of the file open in the current buffer, and a list of
valid source directories |g:vimmake_srcdirs|.

The project root is:
- the Git toplevel directory if available
- the parent directory of the first directory found in |g:vimmake_srcdirs| in
the file path. Example: your |g:vimmake_srcdirs| is to its default value,
['src'], and your file path is `/home/foo/project/bar/src/sub/file.c`, then,
the project root will be `/home/foo/project/bar`.

The chosen Makefile is the nearest found with a glob search from the project
root. If you have `p/foo/src/file.c` with the root directory being `p/` and
two Makefiles: `p/Makefile` and `p/foo/Makefile`, the second one is considered
nearest. If there is no obvious nearest, then the first one is selected.

==============================================================================
Usage                                                          *vimmake-usage*

Available commands: >
  :CMake
  :Make
  :MakeAsync
  :MakeLog
<

Available functions: >
  ProjectRoot(...)
  ProjectMakefile()
<

CMAKE COMMAND                                                          *CMake*

Executing `:CMake` will `touch` all CMakeLists.txt files found in the project
directory tree.

MAKE COMMAND                                                            *Make*

Executing `:Make` will synchronously run make for the current project and save
the log into a temporary file (see |MakeLog|)

All arguments given to `:Make` are given to `make`. There is autocompletion
for detected Makefile rules and `VERBOSE=1`.

Possible errors:
- no Makefile found
- buffer file not in a valid source directory

MAKEASYNC COMMAND                                                  *MakeAsync*

Executing `:MakeAsync` will asynchronously run make for the current project
and save the log into a temporary file (see |MakeLog|)

All arguments given to `:MakeAsync` are given to `make`. There is
autocompletion for detected Makefile rules and `VERBOSE=1`.

Requires |--servername| to be set. See |vimmake-requirements|.

Possible errors:
- no Makefile found
- buffer file not in a valid source directory

MAKELOG COMMAND                                                      *MakeLog*

Executing `:MakeLog` will open the log file into the current window.

PROJECTROOT FUNCTION                                           *ProjectRoot()*

This function returns the project root directory for the opened file in
current buffer, or for a file given as the function parameter.

PROJECTMAKEFILE FUNCTION                                   *ProjectMakefile()*

This function returns the project Makefile for the opened file in current
buffer.

==============================================================================
Requirements                                            *vimmake-requirements*

- Makefile or makefile available
- file open in the current buffer
This file must be in one of the subdirectories specified in |g:vimmake_srcdirs|

For |MakeAsync|:
- |clientserver| support
- |--servername| set
For that, you can set an alias like: >
  alias vim='vim --servername $$'
<

Optionally:
- git binaries
- being in a git repository

==============================================================================
Variables                                                  *vimmake-variables*
                      *g:vimmake_options* *g:vimmake_srcdirs* *g:vimmake_vim*

- |g:vimmake_options| (default: '-j4')
Options to pass to the make program

- |g:vimmake_srcdirs| (default: ['src'])
List of valid source directories

- |g:vimmake_vim| (default: 'vim')
vim binary

- |g:vimmake_autocloseqf| (default: 0)
If set to 1, the QuickFix window will close itself when Enter is hit

- |g:vimmake_qfwrap| (default: 0)
If set to 1, the QuickFix window will be wrapped

==============================================================================
Highlight                                                  *vimmake-highlight*
                                    *VimMakeDone* *VimMakeInfo* *VimMakeWarn*

- |VimMakeDone|
used on make completion

- |VimMakeInfo|
used for information messages

- |VimMakeWarn|
used for warning messages
links to WarningMsg

==============================================================================
License                                                      *vimmake-license*

This software is licensed under the GPL v3 license
